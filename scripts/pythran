#!/usr/bin/env python
import sys,os
import argparse
import pythran

parser = argparse.ArgumentParser(description='pythran: python to c++ compiler')
parser.add_argument('input_file', type=str, help='the python module to compile')
parser.add_argument('-o', dest='output_file', type=str, help='path to generated file')
parser.add_argument('-E', dest='translate_only', action='store_true', help='only run the translator, do not compile it')

args = parser.parse_args()

try:
    module_name = os.path.splitext(os.path.basename(args.input_file))[0]
    if not args.output_file:
        args.output_file = "{0}.{1}".format(module_name, "cpp" if args.translate_only else "so")

    specs = pythran.spec_parser(args.input_file)
    module = pythran.cxx_generator(module_name, file(args.input_file).read(), specs)
    if args.translate_only:
        file(args.output_file,"w").write(module.generate)
    else:
        pythran.compile(module, args.output_file)

except IOError as e:
    print >> sys.stderr, e
    sys.exit(1)
except SyntaxError as e:
    print >> sys.stderr, e
    sys.exit(1)



# vim: ft=python
